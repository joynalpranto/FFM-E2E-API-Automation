{
	"info": {
		"_postman_id": "e2f08b3a-5411-4f75-8fb5-c850040b3efe",
		"name": "E2E Automation - Auth Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Create a new company",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Company Creates Successfully\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//Schema Validation\r",
							"var jsonData= JSON.parse(responseBody)\r",
							"var schema = {\r",
							"    \"$schema\": \"http://json-schema.org/draft-07/schema\",\r",
							"    \"$id\": \"http://example.com/example.json\",\r",
							"    \"type\": \"object\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"default\": {},\r",
							"    \"examples\": [\r",
							"        {\r",
							"            \"data\": {\r",
							"                \"company_address\": \"MI, USA\",\r",
							"                \"company_id\": 3,\r",
							"                \"company_name\": \"Trantow, Howe and MacGyver\",\r",
							"                \"tin\": \"691\"\r",
							"            },\r",
							"            \"message\": \"Successfully registered company 'Trantow, Howe and MacGyver' .\",\r",
							"            \"status\": \"success\"\r",
							"        }\r",
							"    ],\r",
							"    \"required\": [\r",
							"        \"data\",\r",
							"        \"message\",\r",
							"        \"status\"\r",
							"    ],\r",
							"    \"properties\": {\r",
							"        \"data\": {\r",
							"            \"$id\": \"#/properties/data\",\r",
							"            \"type\": \"object\",\r",
							"            \"title\": \"The data schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": {},\r",
							"            \"examples\": [\r",
							"                {\r",
							"                    \"company_address\": \"MI, USA\",\r",
							"                    \"company_id\": 3,\r",
							"                    \"company_name\": \"Trantow, Howe and MacGyver\",\r",
							"                    \"tin\": \"691\"\r",
							"                }\r",
							"            ],\r",
							"            \"required\": [\r",
							"                \"company_address\",\r",
							"                \"company_id\",\r",
							"                \"company_name\",\r",
							"                \"tin\"\r",
							"            ],\r",
							"            \"properties\": {\r",
							"                \"company_address\": {\r",
							"                    \"$id\": \"#/properties/data/properties/company_address\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The company_address schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"MI, USA\"\r",
							"                    ]\r",
							"                },\r",
							"                \"company_id\": {\r",
							"                    \"$id\": \"#/properties/data/properties/company_id\",\r",
							"                    \"type\": \"integer\",\r",
							"                    \"title\": \"The company_id schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": 0,\r",
							"                    \"examples\": [\r",
							"                        3\r",
							"                    ]\r",
							"                },\r",
							"                \"company_name\": {\r",
							"                    \"$id\": \"#/properties/data/properties/company_name\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The company_name schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"Trantow, Howe and MacGyver\"\r",
							"                    ]\r",
							"                },\r",
							"                \"tin\": {\r",
							"                    \"$id\": \"#/properties/data/properties/tin\",\r",
							"                    \"type\": \"string\",\r",
							"                    \"title\": \"The tin schema\",\r",
							"                    \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                    \"default\": \"\",\r",
							"                    \"examples\": [\r",
							"                        \"691\"\r",
							"                    ]\r",
							"                }\r",
							"            },\r",
							"            \"additionalProperties\": true\r",
							"        },\r",
							"        \"message\": {\r",
							"            \"$id\": \"#/properties/message\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The message schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"Successfully registered company 'Trantow, Howe and MacGyver' .\"\r",
							"            ]\r",
							"        },\r",
							"        \"status\": {\r",
							"            \"$id\": \"#/properties/status\",\r",
							"            \"type\": \"string\",\r",
							"            \"title\": \"The status schema\",\r",
							"            \"description\": \"An explanation about the purpose of this instance.\",\r",
							"            \"default\": \"\",\r",
							"            \"examples\": [\r",
							"                \"success\"\r",
							"            ]\r",
							"        }\r",
							"    },\r",
							"    \"additionalProperties\": true\r",
							"};\r",
							"\r",
							"\r",
							"pm.test('Schema is valid', function () {\r",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;\r",
							"\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{$randomCompanyName}}\",\r\n  \"address\": \"MI, USA\",\r\n  \"tin\": \"{{$randomInt}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/api/v1/field-force/auth/register-company",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"v1",
						"field-force",
						"auth",
						"register-company"
					]
				},
				"description": "Objective: As a tester, I should be able to create a company with giving the company's name, address and TIN number. </br>\nExpected Result: It should create the company successfully.</br>\nActual Result: It creates company successfully.</br>\nTest Status: Passed</br>\nTested By: Pranto</br>\nReview By:"
			},
			"response": []
		},
		{
			"name": "2. Managers login through the valid credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Store the auth token\r",
							"\r",
							"var jsonData= JSON.parse(responseBody)\r",
							"pm.environment.set(\"token\", jsonData.auth_token);\r",
							"\r",
							"\r",
							"pm.test(\"Company manager login successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"email\":\"user@example.com\",\r\n\"password\":\"string\"\r\n}"
				},
				"url": {
					"raw": "{{baseURL}}/api/v1/field-force/auth/dashboard-user-login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"v1",
						"field-force",
						"auth",
						"dashboard-user-login"
					]
				},
				"description": "Objective: As a tester, I should be able to login to the company portal with registered information</br>\nExpected Result: It should log in to the portal.</br>\nActual Result: It logs in to the portal.</br>\nTest Status: Passed</br>\nTested By: Pranto</br>\nReview By:"
			},
			"response": []
		},
		{
			"name": "3. Managers authenticate through the JWT token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Manager Authenticate Successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MzAwMTk1MTksImlhdCI6MTYzMDAxNTkxOSwic3ViIjo0LCJ1c2VyX3R5cGUiOiJEYXNoYm9hcmQiLCJuYW1lIjoiV2lsbGlhbSBKYWNrc29uIiwiZW1haWwiOiJ3aWxsaWFtLmphY2tzb25AZW1haWwuY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOiIyIiwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.vQ2nx_KHiBCm7_BpzSnnS3124cL-hXnhoEsBjll_90U"
					}
				],
				"url": {
					"raw": "{{baseURL}}/api/v1/field-force/auth/authenticate-dashboard-user",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"v1",
						"field-force",
						"auth",
						"authenticate-dashboard-user"
					]
				}
			},
			"response": []
		},
		{
			"name": "4. Logout from the dashboard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Manager logged out successfully\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "accept",
						"value": "*/*"
					},
					{
						"key": "Authorization",
						"value": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MzAwMTk1MTksImlhdCI6MTYzMDAxNTkxOSwic3ViIjo0LCJ1c2VyX3R5cGUiOiJEYXNoYm9hcmQiLCJuYW1lIjoiV2lsbGlhbSBKYWNrc29uIiwiZW1haWwiOiJ3aWxsaWFtLmphY2tzb25AZW1haWwuY29tIiwibWVtYmVyX3R5cGUiOjIsImNvbXBhbnlfaWQiOiIyIiwiZGVzaWduYXRpb24iOm51bGwsImRlcGFydG1lbnQiOm51bGx9.vQ2nx_KHiBCm7_BpzSnnS3124cL-hXnhoEsBjll_90U"
					}
				],
				"url": {
					"raw": "{{baseURL}}/api/v1/field-force/auth/logout-dashboard-user",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"api",
						"v1",
						"field-force",
						"auth",
						"logout-dashboard-user"
					]
				}
			},
			"response": []
		}
	]
}